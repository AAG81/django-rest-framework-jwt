[tox]
envlist =
    docs,
    py{27,34,35,36,37}-dj111-drf{37,38,39}-codecov
    py{34,35,36,37}-dj20-drf{37,38,39}-codecov
    py{35,36,37}-dj21-drf{37,38,39,310}-codecov
    py{35,36,37}-dj22-drf{37,38,39,310}-codecov

[travis:env]
TRAVIS =
    true: codecov

[testenv]
description = run the test suite
usedevelop = true
passenv =
    CI TRAVIS TRAVIS_*
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONWARNINGS=once
    PYTHONPATH={toxinidir}
deps =
    dj111: Django>=1.11,<1.12
    dj20: Django>=2.0,<2.1
    dj21: Django>=2.1,<2.2
    dj22: Django>=2.2,<2.3
    drf37: djangorestframework>=3.7,<3.8
    drf38: djangorestframework>=3.8,<3.9
    drf39: djangorestframework>=3.9,<3.10
    drf310: djangorestframework>=3.10
    coverage: coverage
    codecov: codecov
# bash is used to create the codecov flags from the envname,
# only when codecov is used in the envname
whitelist_externals =
    /bin/bash
# pytest-django fails to do the migrations properly in Django 2.2,
# resulting in an error during the migrations regarding missing table
# auth_group.  So the migrations are done manually for Django 2.2
commands =
    dj22: django-admin makemigrations --settings=tests.settings tests
    dj22: django-admin migrate --settings=tests.settings
    pytest {posargs} --cov=rest_framework_jwt
    codecov: bash -ec 'flags={envname}; flags="$\{flags//-/,\}"; codecov --name={envname} --flags="$flags"'
extras =
    test

[testenv:docs]
description = build the documentation
commands = mkdocs build
extras =
    test
    docs

[testenv:changelog]
description = build the changelog
basepython = python3
deps =
    towncrier==18.6.0
skip_install = true
commands =
    python -V
    towncrier {posargs}

[testenv:make-release]
description = build the changelog, bump the package version, commit and tag
basepython=python2.7
skip_install = true
whitelist_externals =
    git
    tox
passenv =
    HOME
deps =
    bumpversion==0.5.3
commands_pre =
    tox -e changelog -- --yes
    git commit -m "Build changelog"
    bumpversion {posargs:minor}
commands =
    git push origin
    git push origin --tags
